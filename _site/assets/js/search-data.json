{"0": {
    "doc": "Agregar capítulos",
    "title": "Agregar capítulos",
    "content": "Ahora que tienes la configuración básica de tu mapa narrativo, es hora de agregar datos a tus capítulos. Los capítulos contienen el contenido de tu historia. Cada uno es un recuadro con texto y multimedia que se desplazará sobre tu mapa base. Necesitarás agregar y configurar algunos detalles en el archivo config.js para crear los capítulos de tu historia. A partir de la línea 18 del archivo config.js, verás los capítulos y sus propiedades. Al final de esta página tienes un detalle sobre la función de cada propiedad de los capítulos en el archivo config.js. Repasaremos las propiedades básicas en los siguientes pasos. 1 Configurando tu primer capítulo. Paso 1 . Agrega un id a tu primer capítulo. Simplemente escribe cualquier texto que identifique tu primer capítulo. Entrada . 20 id: 'mi-primer-capitulo' . Recuerda usar guiones para separar palabras y letras minúsculas para el id del capítulo. Paso 2 . Agrega un title a tu capítulo. En la línea 23, agrega un texto para que sea el título de tu capítulo. Entrada . 23 title: 'Capítulo 1' . Paso 3 . Agrega una description a tu capítulo. Esta sección contendrá el texto principal de este capítulo. En la línea 29, agrega todo el texto para este capítulo. Entrada . 29 description: 'Esta es la mejor historia del mundo. Tiene lugar en la ciudad de Filadelfia' . 2 Agregando una imagen a tu capítulo. Paso 1 . Dale a la imagen que vas a usar un nombre simple pero fácil de identificar. Por ejemplo img_capitulo1.png. Paso 2 . | En el navegador de tu sistema, navega hasta la carpeta del repositorio maplibre-storymap. | Dentro de esta carpeta verás otra carpeta llamada images. | Guarda tu imagen img-capitulo1.png en esta carpeta. | . Paso 3 . Regresa al archivo config.js en Visual Studio Code y agrega lo siguiente: . Entrada . 24 image: './images/img-capitulo1.png' . 3 Configurando la ubicación del capítulo en el mapa. Otra característica de los mapas narrativos es la capacidad de centrar el mapa base en un punto específico para destacar la historia que estás contando. En esta demostración, estamos contando una historia sobre la ciudad de Filadelfia, vamos a ubicar el mapa para que muestre una vista general de la ciudad con el punto central en el Ayuntamiento. La vista del mapa está controlada por las propiedades bajo location: desde la línea 31 hasta la 34 en el archivo config.js. Las dos primeras opciones, center y zoom son las más importantes ya que establecen las coordenadas donde se centra el mapa y cuán alejado o acercado está. Para ayudarte a decidir los valores de estas propiedades, vamos a usar la aplicación web Location Helper. Paso 1 . En tu navegador de internet, navega hasta la aplicación web Location Helper. Verás un mapa y una ventana con algunos valores numéricos para center (array), center (object), zoom, bearing, pitch y otros en el lado izquierdo de la pantalla. Observa un círculo que marca el centro del mapa. Navega por el mapa usando los Controles de navegación o la Barra de búsqueda en la esquina superior derecha de la pantalla, hasta que veas el mapa como quieres que se muestre en tu capítulo. En esta demostración, escribimos en la barra de búsqueda Philadelphia, Pennsylvania y el mapa resultante se ve bien para el propósito del primer capítulo. Paso 2 . Copia los valores en la propiedad center (array) de la aplicación web Location Helper y pégalos en la propiedad center: en la línea 31 del archivo config.js que tienes abierto en Visual Studio Code. Entrada . 31 center: [-75.15911, 39.97307], . Ten en cuenta que las coordenadas están dentro de los símbolos [ ] y separadas por una coma. Paso 3 . Copia los valores en la propiedad zoom de la aplicación web Location Helper y pégalos en la propiedad zoom: en la línea 32 del archivo config.js que tienes abierto en Visual Studio Code. Entrada . 32 zoom: 10.89, . 4 Agregando más capítulos a tu mapa narrativo. La plantilla de Digital Democracy tiene dos capítulos agregados al mapa. Un capítulo tiene la siguiente estructura: . { id: 'id-del-capitulo', alignment: 'left', hidden: false, title: 'Título del capítulo', image: './images/nombre.png', caption: 'Leyenda de la imagen fuente', website: '&lt;a href=\"\" target=\"_blank\"&gt;Sitio web&lt;/a&gt;', author: 'Narrador Digital', legend: '&lt;span style=\"font-size: 0.85em;\"&gt;&lt;em&gt;Contenido de la leyenda&lt;/em&gt;&lt;/span&gt;', description: 'El contenido de tu capítulo', location: { center: [-75.15911, 39.97307], zoom: 10.89, pitch: 0, bearing: 0 }, mapAnimation: 'flyTo', rotateAnimation: false, spinGlobe: false, mapInteractive: true, callback: '', onChapterEnter: [], onChapterExit: [] }, . Para agregar nuevos capítulos a tu mapa narrativo, simplemente copia este texto y pégalo justo después del símbolo } que cierra el capítulo anterior. Asegúrate de incluir una , después del símbolo y pegar el texto antes del ] que cierra la sección de capítulos en el código. Agrega tantos capítulos como quieras. No olvides agregar los datos y especificaciones necesarios en cada capítulo. En la siguiente sección de este tutorial aprenderás cómo previsualizar tu mapa narrativo. Adelante, juega cambiando algunas configuraciones del capítulo como alignment y rotateAnimation. | Propiedad | Función | . | id: | Un ID en estilo slug para el capítulo. Esto es leído por JavaScript que impulsa la aplicación y se asigna como un id HTML para el elemento div que contiene el resto de la historia. Un formato de buenas prácticas sería usar kebab case, como mi-historia-capitulo-1. | . | alignment: | Define dónde debe aparecer el texto de la historia sobre el mapa. Las opciones son center, left, right y full. | . | hidden: | Establece la visibilidad del capítulo como oculta cuando es true. El capítulo seguirá activando una transición de mapa y capa. | . | title: | El título de la sección, mostrado en un elemento h3. | . | image: | La ruta a una imagen para mostrar en esta sección. | . | caption: | Agrega un pie de foto para la imagen. | . | author: | Agrega un autor para mostrar en la parte inferior del capítulo. | . | website: | Agrega un sitio web para mostrar en la parte inferior del capítulo. | . | legend: | Agrega un cuadro de leyenda HTML para este capítulo. legend también debe estar habilitado en la configuración anterior. | . | description: | El contenido principal de la historia para la sección. Esto debe estar alineado con lo que el lector está viendo en el mapa. En la versión básica, este campo se renderizará como HTML. Se pueden incluir imágenes, enlaces y otros elementos como HTML. | . | location: | Detalles sobre la visualización del mapa y la vista de la cámara. center: Coordenadas centrales del mapa, como longitud, latitud. zoom: Nivel de zoom del mapa. pitch: Ángulo de la vista del mapa. 0 es recto hacia abajo, y 60 está muy inclinado. bearing: Grados de rotación en sentido horario desde el Norte (0). Los valores negativos representan rotación en sentido antihorario. | . | mapAnimation: | Define el tipo de animación para la transición entre ubicaciones. Esta propiedad admite animaciones flyTo, easeTo y jumpTo. Si no se especifica, por defecto es flyTo. | . | rotateAnimation: | Inicia una animación de rotación lenta al final de la transición del mapa cuando se establece en true. El mapa rotará 90 grados en 24 segundos. | . | mapInteractive: | Cuando se establece en true, configura este capítulo para que sea interactivo, permitiendo al usuario desplazarse y hacer zoom en el mapa, y agrega controles de navegación. | . | callback: | Acepta el nombre de una función JavaScript y ejecuta la función. Usa esto si tienes código personalizado que quieres ejecutar para un capítulo, como activar o desactivar una leyenda, agregar datos de una solicitud API o mostrar un gráfico interactivo. | . | onChapterEnter: | Capas para ser mostradas/ocultadas/silenciadas cuando la sección se vuelve activa. layer: Nombre de la capa como se asigna en el estilo MapLibre. opacity: La opacidad para mostrar la capa. 0 es completamente transparente, 1 es completamente opaco. duration: La duración de la transición de opacidad, numérica, en milisegundos. El valor predeterminado es 300. Este es un parámetro opcional y puede omitirse. | . | onChapterExit: | Igual que onChapterEnter excepto que se activa cuando la sección se vuelve inactiva. | . ",
    "url": "https://fmvaldezg.codeberg.page//storytelling_maplibre_workshop_es/content/handson/add-chapters.html",
    "relUrl": "/content/handson/add-chapters.html"
  },"1": {
    "doc": "Agregar un Estilo de Mapa a tu mapa",
    "title": "Agregar un Estilo de Mapa",
    "content": "Los mapas web se muestran utilizando un conjunto de reglas que tratan cada elemento del mapa de una manera específica para renderizarlos usando los colores, iconos y formas que ves en tu pantalla. Estas reglas se almacenan en un archivo que puede estar en tu computadora o puede ser accedido a través de una URL. Utilizaremos los OpenMapStyles de MapTiler. Si no tienes una cuenta de MapTiler, consulta la sección de prerrequisitos para crear una cuenta gratuita. Sigue estos pasos para agregar un estilo de mapa a tu mapa narrativo. 1 Inicia sesión en tu cuenta de MapTiler. En tu navegador web, ve a este enlace. Ingresa tu nombre de usuario y contraseña. 2 Selecciona el estilo de mapa que quieres usar. En la pantalla de MapTiler Maps verás una lista de estilos abiertos predefinidos. Haz clic en DataViz si quieres seguir este tutorial, o cualquier otro estilo que prefieras. Puedes crear tus propios estilos usando MapTiler OpenMapTyles haciendo clic en el botón New map. Puedes seleccionar qué capas mostrar y cómo. 3 Copia la URL del estilo vectorial . Copia la URL del estilo. Puedes usar el botón Copy link. Asegúrate de usar el vector style que se encuentra bajo el título ‘Use vector style’. 4 Pega la URL del estilo en el archivo config.js . Regresa al archivo config.js que tienes abierto en Visual Studio Code y pega la URL que acabas de copiar en la propiedad style:. Input . 2 style: 'https://api.maptiler.com/maps/dataviz/style.json?key={tu_propia_clave}' . El estilo puede definirse usando una URL, como en esta demostración, o usando un archivo .json. Si creas tu propio estilo y quieres usar un archivo json, debes guardar ese archivo en la carpeta map en el repositorio y apuntar la propiedad style a él usando style: '\\map\\style.json'. Los estilos personalizados pueden crearse y guardarse como archivos json en aplicaciones como Maputnik o Mapbox Studio. ",
    "url": "https://fmvaldezg.codeberg.page//storytelling_maplibre_workshop_es/content/handson/add-mapstyle.html#agregar-un-estilo-de-mapa",
    "relUrl": "/content/handson/add-mapstyle.html#agregar-un-estilo-de-mapa"
  },"2": {
    "doc": "Agregar un Estilo de Mapa a tu mapa",
    "title": "Agregar un Estilo de Mapa a tu mapa",
    "content": " ",
    "url": "https://fmvaldezg.codeberg.page//storytelling_maplibre_workshop_es/content/handson/add-mapstyle.html",
    "relUrl": "/content/handson/add-mapstyle.html"
  },"3": {
    "doc": "Implementar mapa en la web",
    "title": "Implementar tu mapa narrativo como página web",
    "content": "Ahora que tu mapa narrativo está terminado, es hora de implementarlo como una página web. Para eso utilizaremos GitHub Pages. GitHub Pages es un servicio de alojamiento de sitios estáticos que toma archivos HTML, CSS y JavaScript directamente desde un repositorio en GitHub, opcionalmente procesa los archivos a través de un proceso de construcción, y publica un sitio web. Para publicar tu mapa como una página web, sigue estos pasos: . Paso 1 . Ve a la nube de GitHub e inicia sesión en tu cuenta. Puedes hacer clic en el botón View on GitHub en tu aplicación GitHub Desktop para abrir el repositorio en tu navegador. Paso 2 . En tu repositorio, haz clic en el botón Settings en la barra de menú superior. Paso 3 . Si no lo hiciste antes, tendrás que hacer tu repositorio público para poder usar GitHub Pages. Simplemente haz clic en el botón General en el panel de la izquierda. Desplázate hasta la parte inferior de la página y haz clic en Change visibility y luego en Change to public. Confirma que deseas hacer público el repositorio. Es posible que se te pida que ingreses la contraseña de tu cuenta para confirmar. Paso 4 . En la Configuración del repositorio, haz clic en el botón Pages en las opciones del panel izquierdo. Paso 5 . En la configuración de Pages, haz clic en el menú desplegable bajo el título Branch y selecciona la opción de rama main. Luego haz clic en Save. Un mensaje como el que se muestra a continuación aparecerá en la pantalla. Paso 6 . Espera unos segundos y luego actualiza la página. Una nueva sección aparecerá en la ventana de configuración de Pages con los detalles de tu página implementada. Haz clic en el botón Visit site para abrir el mapa narrativo en una nueva ventana del navegador. Cada vez que cambies algo en tu archivo config.js o agregues algo a tu repositorio, GitHub Pages construirá los archivos de renderizado e implementará la nueva versión de tu mapa. Lo único que tienes que hacer es commit tus cambios y push los cambios a la nube si estás usando GitHub Desktop. ",
    "url": "https://fmvaldezg.codeberg.page//storytelling_maplibre_workshop_es/content/handson/deploy-page.html#implementar-tu-mapa-narrativo-como-p%C3%A1gina-web",
    "relUrl": "/content/handson/deploy-page.html#implementar-tu-mapa-narrativo-como-página-web"
  },"4": {
    "doc": "Implementar mapa en la web",
    "title": "Implementar mapa en la web",
    "content": " ",
    "url": "https://fmvaldezg.codeberg.page//storytelling_maplibre_workshop_es/content/handson/deploy-page.html",
    "relUrl": "/content/handson/deploy-page.html"
  },"5": {
    "doc": "Editar el archivo config.js",
    "title": "Editar el archivo config.js",
    "content": "Primero vamos a hacer algunas ediciones rápidas al archivo config.js de tu nuevo repositorio. Este archivo contiene el contenido principal de la historia y los controles del mapa. 1 Abre los archivos de tu repositorio en Visual Studio Code. Mientras estás en GitHub Desktop, haz clic en la opción Open in Visual Studio Code . Esto abrirá Visual Studio Code. 2 Renombra el archivo. Verás una lista con todos los archivos y carpetas en tu repositorio. Haz clic derecho en el archivo config.js.template y selecciona la opción Rename. Cambia el nombre del archivo a config.js, sin la palabra template al final. 3 Haz algunas ediciones a tu archivo config.js. Haz clic en el archivo que acabas de renombrar. Su contenido se mostrará en el panel central de GitHub Desktop. Las primeras 17 líneas de este archivo contienen las configuraciones principales para tu nuevo mapa narrativo. Vamos a cubrir algunas de ellas para iniciar tu mapa de historia. Paso 1 . Dale un título a tu mapa reemplazando el texto después de title: . Input . 12 title: 'Mi primer Mapa Narrativo' . Ten en cuenta que todas estas propiedades están construidas por un par de valores. Los valores que no sean booleanos (true, false) deben estar entre ``. Paso 2 . Inserta un subtitle para tu mapa narrativo. Escribe cualquier texto que quieras que aparezca en el subtítulo. Recuerda que debe estar entre ``. Input . 14 subtitle: '¡Este es el mapa narrativo más increíble jamás creado!' . Paso 3 . Pon tu nombre como autor del mapa narrativo cambiando el texto de la propiedad byline. Input . 15 byline: 'Felipe Valdez' . Paso 4 . Añade información adicional a tu mapa narrativo en la propiedad footer. Este es un lugar que puedes usar para atribuir los datos o mencionar cualquier organización involucrada en la creación del mapa. Además, es una buena práctica mantener el MapLibre Storytelling y el enlace al proyecto tal como está después de &lt;br&gt;. Input . 17 footer: 'Fuente: Bibliotecas de la Universidad Temple&lt;br&gt; Creado usando la plantilla &lt;a href=\"https://github.com/digidem/maplibre-storymap\" target=\"_blank\"&gt;MapLibre Storytelling&lt;/a&gt;.', . La mayoría de estas propiedades permiten texto con formato HTML. Esto significa que puedes añadir diferentes estilos, enlaces y otras características. Si quieres aprender más sobre HTML sigue este enlace. + Propiedades adicionales y su funcionalidad. El resto de las propiedades en esta sección te permiten cambiar otros aspectos del mapa narrativo. Cubriremos la propiedad style en la siguiente sección. Las otras propiedades se describen a continuación. | Propiedad | Función | . | style: | Este es el estilo de MapLibre que se utilizará para la aplicación. Puedes configurarlo a cualquier estilo de MapLibre alojado en línea o localmente, pero por defecto está configurado para buscar un estilo en el directorio map/. | . | showMarkers: | Esto controla si se muestran marcadores en el punto central de cada capítulo. Si es true, el mapa mostrará un icono azul predeterminado en forma de lágrima invertida. | . | markerColor: | Si showMarkers es true, esta propiedad anulará el color azul claro predeterminado del marcador. | . | inset: | Muestra un mini-mapa insertado. Se desactivará si legend está configurado como true. | . | legend: | Muestra una caja en la parte inferior derecha en la que puedes añadir contenido HTML para cada capítulo, sirviendo como leyenda. Se desactivará si inset está configurado como true. | . | theme: | Hay dos temas básicos disponibles (light y dark). | . Propiedades opcionales . | Propiedad | Función | . | use3dTerrain | Habilita el terreno 3D. Necesitarás proporcionar tus propios mosaicos de terreno. | . | useCustomLayers: | Permite añadir fuentes y capas personalizadas según lo definido en sources.js. | . | bookmarks: | Permite añadir enlaces de marcadores en el encabezado y pie de página para cada capítulo. Se añadirán marcadores para cualquier capítulo que tenga un título. | . | chapterReturn: | Para habilitar un enlace “Volver al principio” al final de cada capítulo. | . | logo: | Añade una imagen de logo al encabezado de tu historia. | . | mobileview: | Muestra una nota útil para rotar el dispositivo cuando se visualiza el mapa narrativo en un móvil. Este es contenido HTML y puede ser modificado en config.js. | . Fuente: MapLibre Storytelling - Digital Democracy. ",
    "url": "https://fmvaldezg.codeberg.page//storytelling_maplibre_workshop_es/content/handson/edit-configjs.html",
    "relUrl": "/content/handson/edit-configjs.html"
  },"6": {
    "doc": "Clonar La Plantilla de Narración",
    "title": "Clonar la plantilla de narración",
    "content": "En este taller vamos a duplicar la plantilla de narración creada por Digital Democracy a tu propia cuenta de GitHub, y luego haremos algunas ediciones juntos. Puedes modificar y reutilizar esta plantilla en cualquier momento desde tu propia cuenta. 1 Ve al repositorio Interactive Storytelling with MapLibre . 2 Haz clic en la opción para abrir el repositorio en GitHub Desktop . Bajo el botón Code, verás una opción para Open with GitHub Desktop (Abrir con GitHub Desktop). Confirma que deseas abrirlo haciendo clic en Open GitHub Desktop.app en el mensaje que aparece. Alternativamente, si estás usando GitHub en la web, simplemente bifurca el repositorio a tu cuenta y continúa desde allí. GitHub Desktop debería abrirse en tu computadora y deberías ver una ventana con la información del repositorio bifurcado, incluyendo un panel que lista los cambios (estará vacío ya que es la primera vez que lo abres) y tres opciones para comenzar a trabajar en tu repositorio: . Si tienes Visual Study Code instalado, deberías ver el texto Open in Visual Studio Code (Abrir en Visual Studio Code) en el botón de acción. Si no lo tienes pero tienes un editor diferente (como RStudio, XCode o Atom), entonces deberías ver esa opción. Si necesitas configurar Visual Studio Code como el editor predeterminado para tu GitHub Desktop, entonces sigue las instrucciones aquí. | Abrir el repositorio en tu editor externo. | Ver los archivos de tu repositorio en el Finder. | Abrir la página del repositorio en GitHub en tu navegador. | . ",
    "url": "https://fmvaldezg.codeberg.page//storytelling_maplibre_workshop_es/content/handson/fork-repo.html#clonar-la-plantilla-de-narraci%C3%B3n",
    "relUrl": "/content/handson/fork-repo.html#clonar-la-plantilla-de-narración"
  },"7": {
    "doc": "Clonar La Plantilla de Narración",
    "title": "Clonar La Plantilla de Narración",
    "content": " ",
    "url": "https://fmvaldezg.codeberg.page//storytelling_maplibre_workshop_es/content/handson/fork-repo.html",
    "relUrl": "/content/handson/fork-repo.html"
  },"8": {
    "doc": "Práctica",
    "title": "Actividad Práctica",
    "content": " ",
    "url": "https://fmvaldezg.codeberg.page//storytelling_maplibre_workshop_es/content/hands-on.html#actividad-pr%C3%A1ctica",
    "relUrl": "/content/hands-on.html#actividad-práctica"
  },"9": {
    "doc": "Práctica",
    "title": "Práctica",
    "content": " ",
    "url": "https://fmvaldezg.codeberg.page//storytelling_maplibre_workshop_es/content/hands-on.html",
    "relUrl": "/content/hands-on.html"
  },"10": {
    "doc": "Inicio",
    "title": "Storytelling con Mapas - Usando Maplibre",
    "content": ". Autor . Felipe Valdez Especialista en Sistemas de Información Geográfica Temple University Libraries www.felipevaldez.com . | Una cuenta de GitHub.com. Si aún no tienes una cuenta de GitHub.com, puedes crearla aquí. Mira este breve video Comenzando con GitHub si eres principiante y quieres tener una visión general de la plataforma. | Una cuenta de MapTiler. Para crear una, ve a maptiler.com. | . Objetivo de este taller . Nuestro objetivo es mostrarte cómo crear tus propias aplicaciones interactivas de storytelling con mapas y multimedia, utilizando herramientas de código abierto. Mostraremos algunos ejemplos de historias y te enseñaremos de manera práctica cómo crear tus propias aplicaciones interactivas y compartirlas en la web. Este tutorial está diseñado para que puedas crear una historia interactiva sin conocimientos de programación, sin embargo, si es tu primera vez generando código, puede que necesites algo de tiempo para familiarizarte con estos tipos de interfaces y archivos, aunque no será complicado. Si deseas familiarizarte con el uso de código para este tipo de actividades, te recomendamos consultar la sección de recursos adicionales. Puedes ver el mapa interactivo de esta demostración en: . Un recorrido por los Campus de la Universidad Temple . Programa . | Hora | Contenido | . | 0:00 | Presentaciones | . | 0:05 | Mapa narrativo de Philly Community Wireless | . | 0:25 | Demostración práctica | . | 0:50 | Preguntas | . | 1:00 | Fin | . ",
    "url": "https://fmvaldezg.codeberg.page//storytelling_maplibre_workshop_es/#storytelling-con-mapas---usando-maplibre",
    "relUrl": "/#storytelling-con-mapas---usando-maplibre"
  },"11": {
    "doc": "Inicio",
    "title": "Inicio",
    "content": " ",
    "url": "https://fmvaldezg.codeberg.page//storytelling_maplibre_workshop_es/",
    "relUrl": "/"
  },"12": {
    "doc": "Introducción",
    "title": "¿Por qué usar mapas para contar historias?",
    "content": "Los mapas siempre han sido una herramienta vital para la narración de historias. No solo proporcionan contexto para las narrativas que contamos; también sirven como formas visualmente atractivas de presentar información a audiencias diversas. Las tecnologías modernas han mejorado estos mapas, añadiendo el poder del análisis espacial mientras ofrecen la capacidad de generar y compartir datos en tiempo real y de manera colaborativa. Esto significa que quienes ven el mapa también pueden participar en su creación, transformándolos de meros observadores a participantes activos en la historia que el mapa cuenta. ",
    "url": "https://fmvaldezg.codeberg.page//storytelling_maplibre_workshop_es/content/introduction.html#por-qu%C3%A9-usar-mapas-para-contar-historias",
    "relUrl": "/content/introduction.html#por-qué-usar-mapas-para-contar-historias"
  },"13": {
    "doc": "Introducción",
    "title": "Consulta algunos ejemplos de mapas narrativos aquí",
    "content": "La Evolución de los Establos de Caballos de Fletcher Street. Un Legado de los Jinetes Negros de Filadelfia: Pasado y Presente . Nuestro Territorio es Nuestra Vida . Diez Conflictos a Vigilar en 2022 . Polar Star Inn y Seipel Hut (Cabaña de Carl) . ",
    "url": "https://fmvaldezg.codeberg.page//storytelling_maplibre_workshop_es/content/introduction.html#consulta-algunos-ejemplos-de-mapas-narrativos-aqu%C3%AD",
    "relUrl": "/content/introduction.html#consulta-algunos-ejemplos-de-mapas-narrativos-aquí"
  },"14": {
    "doc": "Introducción",
    "title": "Introducción",
    "content": " ",
    "url": "https://fmvaldezg.codeberg.page//storytelling_maplibre_workshop_es/content/introduction.html",
    "relUrl": "/content/introduction.html"
  },"15": {
    "doc": "Prerrequisitos",
    "title": "Prerrequisitos",
    "content": "Para este tutorial, necesitarás completar (o tener) lo siguiente: . | 1 Crear una cuenta de GitHub | 2 Descargar e instalar GitHub Desktop | 3 Descargar e instalar VS Code | 4 Crear una cuenta de MapTiler | . Sigue las instrucciones en las secciones a continuación para completar estos prerrequisitos. ",
    "url": "https://fmvaldezg.codeberg.page//storytelling_maplibre_workshop_es/content/prerequisites.html",
    "relUrl": "/content/prerequisites.html"
  },"16": {
    "doc": "Prerrequisitos",
    "title": "1 Crear una cuenta de GitHub",
    "content": "Si quieres aprender más sobre Git y GitHub, recomendamos el siguiente tutorial. Paso 1 . Ve a github.com/signup . Paso 2 . Escribe tu correo electrónico, una contraseña y un nombre de usuario para tu nueva cuenta. Luego haz clic en Continue. Paso 3 . Se te harán algunas preguntas. Cuando se te solicite, asegúrate de seleccionar Continue for free en el tipo de cuenta. Paso 4 . Recibirás un correo electrónico con un código de activación. Introduce el código cuando se te solicite en la página web de GitHub. Ahora estás listo para crear tu primer repositorio. ",
    "url": "https://fmvaldezg.codeberg.page//storytelling_maplibre_workshop_es/content/prerequisites.html#1-crear-una-cuenta-de-github",
    "relUrl": "/content/prerequisites.html#1-crear-una-cuenta-de-github"
  },"17": {
    "doc": "Prerrequisitos",
    "title": "2 Descargar e instalar GitHub Desktop",
    "content": "GitHub Desktop es una aplicación gratuita y de código abierto que te ayuda a trabajar con archivos alojados en GitHub u otros servicios de alojamiento Git. Si quieres aprender más sobre esta aplicación, ve aquí. Dependiendo del sistema operativo (SO) de tu computadora, los siguientes pasos pueden parecer un poco diferentes. En este taller usamos MacOS, pero se puede hacer en cualquier SO. Paso 1 . Inicia sesión en tu cuenta de GitHub, sigue este enlace a la página de descargas y haz clic en el botón Download now. Paso 2 . Una vez descargado, encontrarás un nuevo archivo .zip en tu carpeta de Descargas. Simplemente puedes hacer doble clic en él (o clic derecho y descomprimir archivo). Paso 3 . Verás el icono de GitHub Desktop junto al archivo descargado. Solo arrastra el icono y suéltalo en tu carpeta de Aplicaciones. Paso 4 . Haz doble clic en el icono de GitHub Desktop para abrir la aplicación. La primera vez que abras GitHub Desktop, verás un mensaje de tu sistema pidiendo permiso para abrir la aplicación. Simplemente haz clic en Abrir. ",
    "url": "https://fmvaldezg.codeberg.page//storytelling_maplibre_workshop_es/content/prerequisites.html#2-descargar-e-instalar-github-desktop",
    "relUrl": "/content/prerequisites.html#2-descargar-e-instalar-github-desktop"
  },"18": {
    "doc": "Prerrequisitos",
    "title": "3 Descargar e instalar VS Code",
    "content": "Paso 1 . En tu navegador de internet, ve a la página de descargas de code.visualstudio.com y haz clic en el botón Download en la esquina superior derecha. Paso 2 . Selecciona el instalador apropiado para el sistema operativo de tu computadora. En este caso estamos usando MacOS. El botón de descarga en la pantalla principal debería dirigirte a la versión correcta para tu equipo. Paso 3 . Una vez descargado, encontrarás un nuevo archivo .zip en tu carpeta de Descargas. Simplemente puedes hacer doble clic en él (o clic derecho y descomprimir archivo). Paso 4 . Verás el icono de Visual Studio Code junto al archivo descargado. Solo arrastra el icono y suéltalo en tu carpeta de Aplicaciones. Paso 5 . Haz doble clic en el icono de Visual Studio Code para abrir la aplicación. La primera vez que abras Visual Studio Code, verás un mensaje de tu sistema pidiendo permiso para abrir la aplicación. Simplemente haz clic en Abrir. ",
    "url": "https://fmvaldezg.codeberg.page//storytelling_maplibre_workshop_es/content/prerequisites.html#3-descargar-e-instalar-vs-code",
    "relUrl": "/content/prerequisites.html#3-descargar-e-instalar-vs-code"
  },"19": {
    "doc": "Prerrequisitos",
    "title": "4 Crear una cuenta de MapTiler",
    "content": "MapTiler es una plataforma de software para construir mapas digitales. MapTiler mantiene el proyecto de código abierto OpenMapTiles que consiste en un conjunto de herramientas que permiten a todos crear sus propios mosaicos de mapas vectoriales a partir de datos de OpenStreetMap para alojamiento, auto-alojamiento o uso sin conexión. En este tutorial usaremos el plan gratuito de MapTiler para acceder a sus mosaicos vectoriales alojados y usar el estilo OpenMapTiles. Paso 1 . En tu navegador, ve a la página principal de MapTiler.com y haz clic en Create a free account. Paso 2 . Inicia sesión usando tu dirección de correo electrónico o tu cuenta de Google si tienes una. Escribe tu nombre y una contraseña para tu cuenta. Luego haz clic en Save para continuar. Paso 3 . Recibirás un correo electrónico para verificar tu cuenta. Haz clic en el enlace del correo electrónico para ser redirigido a tu cuenta de MapTiler. Ahora puedes iniciar sesión usando tu correo electrónico y la contraseña que creaste en el paso anterior. Paso 4 . Ahora estás listo para comenzar a crear y usar Maptiles y estilos de mapas en MapTiler . ",
    "url": "https://fmvaldezg.codeberg.page//storytelling_maplibre_workshop_es/content/prerequisites.html#4-crear-una-cuenta-de-maptiler",
    "relUrl": "/content/prerequisites.html#4-crear-una-cuenta-de-maptiler"
  },"20": {
    "doc": "Vista previa del mapa",
    "title": "Vista previa de tu mapa",
    "content": "Una vez que hayas configurado y agregado los elementos básicos a tu mapa narrativo, es una buena práctica previsualizarlo antes de implementarlo como una página web. Para hacerlo, vamos a utilizar la funcionalidad de servidor en vivo de Visual Studio Code. Esto implementará el mapa narrativo localmente en tu computadora. Sigue los pasos a continuación para previsualizar tu mapa narrativo. 1 Confirma tus cambios en GitHub. Una de las funciones de Git como sistema de control de versiones es tomar instantáneas de los cambios que haces en tus archivos. Un commit es una instantánea de tu proyecto en ese momento. Para hacer commit de tus cambios: . Paso 1 . Ve a la aplicación GitHub Desktop. Verás todos los archivos que has cambiado listados en el panel del lado izquierdo, y todos los cambios que has hecho en esos archivos en el panel del centro. Si agregaste algo al archivo, estará resaltado en verde y si eliminaste algo, en rojo. Revisa los cambios que has realizado. Paso 2 . En el panel inferior izquierdo, escribe un resumen para el commit y, opcionalmente, una descripción. Es una buena práctica mantener un registro detallado de los cambios realizados, especialmente si más de una persona está trabajando en el proyecto. Luego haz clic en Commit to main. Paso 3 . Después de confirmar los cambios, GitHub Desktop mostrará la ventana principal del repositorio y habilitará la opción para Publish repository. Una copia de tu repositorio ahora está disponible en la nube de GitHub. Adelante, publica tu repositorio haciendo clic en Publish repository. La primera vez que hagas esto, se te pedirá que establezcas un nombre para tu repositorio y una descripción opcional. Luego haz clic en Publish Repository. 2 Vista previa de tu mapa narrativo localmente. Ahora que has publicado tu repositorio en la nube de GitHub, regresa a Visual Studio Code. Para visualizar una vista previa de tu mapa narrativo, haz clic en el botón Go Live ubicado en la barra en la esquina inferior derecha. Se abrirá una nueva ventana en tu navegador de internet predeterminado. Verás una vista previa de tu mapa narrativo. Ahora puedes agregar o modificar tu archivo config.js y ver los cambios en vivo en tu computadora local. Para hacerlo, simplemente guarda los cambios que realizaste en Visual Studio Code (presiona ctrl + s) y actualiza la ventana del navegador web. Este mapa es solo una vista previa. Todavía está viviendo en tu sistema. Para publicarlo como una página web para ser compartida y visualizada por cualquier persona, sigue las instrucciones en la siguiente sección de este tutorial. ",
    "url": "https://fmvaldezg.codeberg.page//storytelling_maplibre_workshop_es/content/handson/preview-storymap.html#vista-previa-de-tu-mapa",
    "relUrl": "/content/handson/preview-storymap.html#vista-previa-de-tu-mapa"
  },"21": {
    "doc": "Vista previa del mapa",
    "title": "Vista previa del mapa",
    "content": " ",
    "url": "https://fmvaldezg.codeberg.page//storytelling_maplibre_workshop_es/content/handson/preview-storymap.html",
    "relUrl": "/content/handson/preview-storymap.html"
  }
}
